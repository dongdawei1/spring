<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">

	<!-- REST(ruai si te),把请求类型转换为增删改查请求
	配置 org.springframework.web.filter.HiddenHttpMethodFilter: 可以把 POST 请求转为 DELETE 或 POST 请求 
	
	<filter>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>	
	<filter-mapping>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>   -->



	<!-- 配置 DispatcherServlet -->
	<servlet>
		<servlet-name>dispatcherServlet</servlet-name><!--di...名字随便叫  -->
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 配置 DispatcherServlet 的一个初始化参数: 配置 SpringMVC 配置文件的位置和名称 -->
		
		<!-- 
		   <init-param>
			   <param-name>contextConfigLocation</param-name>
			   <param-value>classpath:springmvc.xml</param-value>
		   </init-param>
				实际上也可以不通过 contextConfigLocation 来配置 SpringMVC 的配置文件, 而使用默认的.
			
			//配置文件必须放在/WEB-INF/包下
			默认的配置文件为: /WEB-INF/<servlet-name>-servlet.xml
			
			  <servlet-name>必须对应  上边配置的 dispatcherServlet  -->
			               
		
		<!-- 创建SpringMVC对象的配置文件classpach默认值为src包 -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:springmvc.xml</param-value>
		</init-param>
		
		<!-- 在web容器创建时就创建SpringMVC对象 -->
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping><!--所有的页面请求全部交给这个类进行处理直接调用 类上的@RequestMapping("/")-->
		<servlet-name>dispatcherServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

</web-app>